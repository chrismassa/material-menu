// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@import "mixins";

$app-typography: mat.define-typography-config(
    $font-family: "Nunito",
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// In this case we have manually defined the color palettes in the _variables.scss file.

$primary-palette: (
    50: #f2f6e4,
    100: #deeabd,
    200: #c8dc91,
    300: #b2cd64,
    400: #a2c343,
    500: #91b822,
    600: #89b11e,
    700: #7ea819,
    800: #74a014,
    900: #62910c,
    A100: #e6ffc0,
    A200: #d2ff8d,
    A400: #bfff5a,
    A700: #b5ff41,
    contrast: (
        50: #000000,
        100: #000000,
        200: #000000,
        300: #000000,
        400: #000000,
        500: #000000,
        600: #000000,
        700: #000000,
        800: #000000,
        900: #ffffff,
        A100: #000000,
        A200: #000000,
        A400: #000000,
        A700: #000000,
    ),
);

$accent-palette: (
    50: #e3e7ea,
    100: #b9c4ca,
    200: #8b9ca7,
    300: #5c7483,
    400: #395769,
    500: #16394e,
    600: #133347,
    700: #102c3d,
    800: #0c2435,
    900: #061725,
    A100: #61afff,
    A200: #2e96ff,
    A400: #007cfa,
    A700: #006fe1,
    contrast: (
        50: #000000,
        100: #000000,
        200: #000000,
        300: #ffffff,
        400: #ffffff,
        500: #ffffff,
        600: #ffffff,
        700: #ffffff,
        800: #ffffff,
        900: #ffffff,
        A100: #000000,
        A200: #000000,
        A400: #ffffff,
        A700: #ffffff,
    ),
);

$warn-palette: (
    50: #fee8e7,
    100: #fcc7c3,
    200: #faa19b,
    300: #f77b72,
    400: #f65f54,
    500: #f44336,
    600: #f33d30,
    700: #f13429,
    800: #ef2c22,
    900: #ec1e16,
    A100: #ffffff,
    A200: #ffe9e9,
    A400: #ffb8b6,
    A700: #ff9f9c,
    contrast: (
        50: #000000,
        100: #000000,
        200: #000000,
        300: #000000,
        400: #ffffff,
        500: #ffffff,
        600: #ffffff,
        700: #ffffff,
        800: #ffffff,
        900: #ffffff,
        A100: #000000,
        A200: #000000,
        A400: #000000,
        A700: #000000,
    ),
);

$app-primary: mat.define-palette($primary-palette);
$app-accent: mat.define-palette($accent-palette);
// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette($warn-palette);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme(
    (
        color: (
            primary: $app-primary,
            accent: $app-accent,
            warn: $app-warn,
        ),
        typography: $app-typography,
    )
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

:root {
    .default {
        @include mat.all-component-themes($app-theme);
        @include generate-colors-variables($app-theme);
    }
}
