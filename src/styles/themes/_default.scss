// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.
@import "variables";
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
$button: mat.define-typography-level(
    $font-weight: 500,
    $font-size: 11pt,
    $line-height: 1,
);
$body-1: mat.define-typography-level(
    $font-size: 11pt,
    $line-height: 1.5,
);
$fc-typography: mat.define-typography-config(
    $font-family: "Nunito",
    /* $button: $button,
    $body-1: $body-1, */
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// In this case we have manually defined the color palettes in the _variables.scss file.
$fc-primary: mat.define-palette($primary-palette);
$fc-accent: mat.define-palette($accent-palette);
// The warn palette is optional (defaults to red).
$fc-warn: mat.define-palette($warn-palette);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$fc-theme: mat.define-light-theme(
    (
        color: (
            primary: $fc-primary,
            accent: $fc-accent,
            warn: $fc-warn,
        ),
        typography: $fc-typography,
    )
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($fc-theme);
